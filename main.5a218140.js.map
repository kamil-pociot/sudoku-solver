{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","js/table.js","js/config.js","js/sudoku_utils.js","js/sudoku.js","js/options.js","js/main.js"],"names":["readOnlyTable","graph","title","originTable","table","readOnlyElement","formTable","form","document","createElement","setAttribute","tableElement","inputElement","appendChild","submitContainer","classList","add","checkboxContainer","checkbox","checkboxLabel","innerText","delayInput","addEventListener","e","console","log","key","code","includes","preventDefault","target","blur","delayLabel","solveButton","cellElement","caption","i","colgroup","innerHTML","tbody","k","tr","j","index","td","_","addedValue","input","value","GRID_SIZE","SUBGRID_SIZE","neighbors","length","n","x","y","Math","floor","xFactor","yFactor","result","calculatedIndex","push","buildNeighborsArray","Array","fill","map","nums","keys","neighborsArray","pow","validateSudoku","neigh","iNeighbors","iNeighborsValues","filter","printTable","header","container","getElementById","solveSudoku","slowDown","delay","counter","s","from","t","pop","Promise","resolve","setTimeout","next","indexOf","assignAndPush","getAvailableNumbers","tNeighbor","tNeighbors","tNeighborsValues","availableNumbers","num","arrayCopy","notFunChallenge","arizonaEasiest","dailyTelegraph","vegardHanssen","randomEasy","randomMedium","randomHard","randomExpert","randomEvil","options","name","window","onload","renderFormTable","tableContainer","arr","querySelectorAll","el","parseInt","querySelector","checked","then","catch","error","warn","getElementsByClassName","forEach","id","prefix","slice","nextId","select","optionsSelect","option","optionElement","selectedIndex","solutionContainer"],"mappings":"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EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAiB,CACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAiB,CACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAgB,CACpB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAa,CACjB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAe,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAa,CACjB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAe,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIpBC,EAAa,CACjB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGbC,EAAU,CACrB,CAAEC,KAAM,sBAAuB9G,MAAOqG,GACtC,CAAES,KAAM,2BAA4B9G,MAAOsG,GAC3C,CAAEQ,KAAM,wBAAyB9G,MAAOuG,GACxC,CAAEO,KAAM,sBAAuB9G,MAAOoG,GACtC,CAAEU,KAAM,gBAAiB9G,MAAOwG,GAChC,CAAEM,KAAM,kBAAmB9G,MAAOyG,GAClC,CAAEK,KAAM,gBAAiB9G,MAAO0G,GAChC,CAAEI,KAAM,kBAAmB9G,MAAO2G,GAClC,CAAEG,KAAM,gBAAiB9G,MAAO4G,GAChC,CAAEE,KAAM,QAAS9G,MAAO,IAAI+D,MAAM,IAAIC,KAAK,KAVtC,QAAA,QAAA;;AChHP,aALA,QAAA,+BACA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,YACA,EAAA,QAAA,aAEA+C,OAAOC,OAAS,WACRC,IAAAA,EAAkB,SAACjH,GACjBkH,IAAAA,EAAiB3G,SAASuE,eAAe,oBAC/CoC,EAAe7E,UAAY,GAC3B6E,EAAetG,aACb,EAAUZ,EAAAA,WAAAA,EAAO,sCAGnBO,SAASuE,eAAe,eAAezD,iBAAiB,SAAU,SAACC,GACjEA,EAAEM,iBACIuF,IAAAA,EAAMpD,MAAMqB,KAAK9D,EAAEO,OAAOuF,iBAAiB,eAAenD,IAC9D,SAACoD,GAAQA,OAAAA,EAAGtE,MAAQuE,SAASD,EAAGtE,OAAS,IAErCiC,EAAW1D,EAAEO,OAAO0F,cAAc,cAAcC,QAChDvC,EAAQ3D,EAAEO,OAAO0F,cAAc,eAAepG,WACxCgG,EAAAA,EAAAA,aAAAA,EAAKnC,EAAUC,GACxBwC,KAAK,WAAMlG,OAAAA,QAAQC,IAAI,aACvBkG,MAAM,SAACC,GAAUpG,OAAAA,QAAQqG,KAAKD,OAGnC5D,MAAMqB,KAAK7E,SAASsH,uBAAuB,iBAAiBC,QAC1D,SAAChF,GACCA,EAAMzB,iBAAiB,QAAS,SAACC,GACzByG,IAAAA,EAAKzG,EAAEO,OAAOkG,GACdC,EAASD,EAAGE,MAAM,EAAG,GACrBvF,EAAQ4E,SAASS,EAAGE,MAAM,IAC5BvF,GAAAA,EAAQ,GAAI,CACRwF,IAAAA,EAAYF,GAAAA,OAAAA,GAAStF,OAAAA,EAAQ,GACnCnC,SAASuE,eAAeoD,GAAQC,eAOpCC,EAAgB7H,SAASuE,eAAe,iBACtCgD,EAAAA,QAAAA,QAAQ,SAACO,GACTC,IAAAA,EAAgB/H,SAASC,cAAc,UAC7C4H,EAAc3H,aAAa,QAAS,OACpC6H,EAAcnH,UAAYkH,EAAOvB,KACjCsB,EAAcxH,YAAY0H,KAG5BF,EAAc/G,iBAAiB,SAAU,SAACC,GACxC2F,EAAgBJ,EAAQvF,QAAAA,EAAEO,OAAOgF,QAAQ0B,eAAevI,SAGpDwI,IAAAA,EAAoBjI,SAASuE,eAAe,sBAClD0D,EAAkBnG,UAAY,GAC9BmG,EAAkB5H,aAChB,EAAc,EAAA,eAAA,IAAImD,MAAM,IAAIC,KAAK,GAAI,eAGvCiD,EAAgBJ,EAAQ,QAAA,GAAG7G","file":"main.5a218140.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const readOnlyTable = (graph, title, originTable) => {\n  return table(title, graph, readOnlyElement, originTable);\n};\n\nexport const formTable = (graph, title) => {\n  const form = document.createElement(\"form\");\n  form.setAttribute(\"id\", \"sudoku-form\");\n\n  const tableElement = table(title, graph, inputElement);\n  form.appendChild(tableElement);\n\n  const submitContainer = document.createElement(\"div\");\n  submitContainer.classList.add(\"submit-container\");\n\n  const checkboxContainer = document.createElement(\"div\");\n  checkboxContainer.classList.add(\"checkbox-container\");\n\n  const checkbox = document.createElement(\"input\");\n  checkbox.setAttribute(\"type\", \"checkbox\");\n  checkbox.setAttribute(\"id\", \"slow-down\");\n  checkbox.classList.add(\"form-checkbox\");\n\n  const checkboxLabel = document.createElement(\"label\");\n  checkboxLabel.setAttribute(\"for\", \"slow-down\");\n  checkboxLabel.innerText = \"Slow down (delay \";\n\n  const delayInput = document.createElement(\"span\");\n  delayInput.classList.add(\"span-input\");\n  delayInput.setAttribute(\"id\", \"span-input\");\n  delayInput.setAttribute(\"role\", \"textbox\");\n  delayInput.setAttribute(\"contenteditable\", \"true\");\n  delayInput.innerText = \"1\";\n\n  delayInput.addEventListener(\"keydown\", (e) => {\n    // prettier-ignore\n    const allowedKeys = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', \"Backspace\", \"ArrowLeft\", \"ArrowRight\"]\n    console.log(e.key, e.code);\n    if (!allowedKeys.includes(e.key)) {\n      e.preventDefault();\n    }\n    if (e.key === \"Enter\") {\n      e.target.blur();\n    }\n  });\n\n  const delayLabel = document.createElement(\"p\");\n  delayLabel.innerText = \"ms)\";\n\n  checkboxContainer.appendChild(checkbox);\n  checkboxContainer.appendChild(checkboxLabel);\n  checkboxContainer.appendChild(delayInput);\n  checkboxContainer.appendChild(delayLabel);\n  submitContainer.appendChild(checkboxContainer);\n\n  const solveButton = document.createElement(\"button\");\n  solveButton.setAttribute(\"type\", \"submit\");\n  solveButton.classList.add(\"solve-button\");\n  solveButton.innerText = \"Solve!\";\n\n  submitContainer.appendChild(solveButton);\n  form.appendChild(submitContainer);\n  return form;\n};\n\nconst table = (title, graph, cellElement, originTable) => {\n  const table = document.createElement(\"table\");\n  const caption = document.createElement(\"caption\");\n  caption.innerText = title;\n  table.appendChild(caption);\n  for (let i = 0; i < 3; i++) {\n    const colgroup = document.createElement(\"colgroup\");\n    colgroup.innerHTML = \"<col><col><col>\";\n    table.appendChild(colgroup);\n  }\n  for (let i = 0; i < 3; i++) {\n    const tbody = document.createElement(\"tbody\");\n    for (let k = 0; k < 3; k++) {\n      const tr = document.createElement(\"tr\");\n      for (let j = 0; j < 9; j++) {\n        const index = (i * 3 + k) * 9 + j;\n        const value = graph[index];\n        const addedValue = originTable ? !originTable[index] : false;\n        const td = cellElement(value, index, addedValue);\n        tr.appendChild(td);\n      }\n      tbody.appendChild(tr);\n    }\n    table.appendChild(tbody);\n  }\n  return table;\n};\n\nconst readOnlyElement = (innerText, _, addedValue) => {\n  const td = document.createElement(\"td\");\n  if (addedValue) {\n    td.classList.add(\"added-value-cell\");\n  }\n  if (innerText !== 0) {\n    td.innerText = innerText;\n  }\n  return td;\n};\n\nconst inputElement = (innerText, index) => {\n  const td = document.createElement(\"td\");\n  const input = document.createElement(\"input\");\n  input.setAttribute(\"id\", `input-${index}`);\n  input.classList.add(\"sudoku-input\");\n  if (innerText !== 0) {\n    input.value = innerText;\n  }\n  td.appendChild(input);\n  return td;\n};\n","export const GRID_SIZE = 9;\nexport const SUBGRID_SIZE = 3;\n","import { GRID_SIZE, SUBGRID_SIZE } from \"./config\";\nimport { readOnlyTable } from \"./table\";\n\nconst neighbors = (index) => {\n  const length = GRID_SIZE;\n  const n = SUBGRID_SIZE;\n\n  const x = index % length;\n  const y = Math.floor(index / length);\n\n  const xFactor = Math.floor(x / n);\n  const yFactor = Math.floor(y / n);\n\n  const result = [];\n\n  for (let i = xFactor * n; i < xFactor * n + n; i++) {\n    for (let j = yFactor * n; j < yFactor * n + n; j++) {\n      const calculatedIndex = j * length + i;\n      if (calculatedIndex !== index) {\n        result.push(calculatedIndex);\n      }\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    if (i < xFactor * n || i >= xFactor * n + n) {\n      const calculatedIndex = y * length + i;\n      result.push(calculatedIndex);\n    }\n    if (i < yFactor * n || i >= yFactor * n + n) {\n      const calculatedIndex = i * length + x;\n      result.push(calculatedIndex);\n    }\n  }\n\n  return result;\n};\n\nconst buildNeighborsArray = (n) => {\n  return new Array(n).fill(0).map((_, index) => neighbors(index));\n};\n\nexport const nums = [...Array(GRID_SIZE).keys()].map((i) => i + 1);\nexport const neighborsArray = buildNeighborsArray(Math.pow(GRID_SIZE, 2));\n\nexport const validateSudoku = (graph, neigh) => {\n  for (let i = 0; i < graph.length; i++) {\n    if (graph[i] !== 0) {\n      const iNeighbors = neigh[i];\n      const iNeighborsValues = iNeighbors.map((n) => graph[n]);\n      const availableNumbers = nums.filter(\n        (n) => !iNeighborsValues.includes(n)\n      );\n\n      if (!availableNumbers.includes(graph[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nexport const printTable = (graph, header, originTable) => {\n  const container = document.getElementById(\"solution-container\");\n  container.innerHTML = \"\";\n  container.appendChild(readOnlyTable(graph, header, originTable));\n};\n","import {\n  neighborsArray,\n  nums,\n  validateSudoku,\n  printTable,\n} from \"./sudoku_utils\";\n\nexport async function solveSudoku(graph, slowDown, delay) {\n  const originTable = graph.map((n) => n && n !== 0);\n  if (!validateSudoku(graph, neighborsArray)) {\n    printTable(graph, \"Sudoku invalid\");\n    return;\n  }\n  let counter = 0;\n  // 1. Create stack\n  let s = [];\n\n  // 2. Push first item to the stack\n  s.push({ index: 0, value: 0, graph: Array.from(graph) });\n\n  while (s.length > 0) {\n    // 3. Take from the stack\n    let t = s.pop();\n\n    counter++;\n    if (slowDown) {\n      printTable(t.graph, `In progress... ${counter}`, originTable);\n      await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n\n    // 4. If there are no more unvisited vertices\n    if (!t.graph.includes(0)) {\n      // Solution is found\n      console.log({ result: true, graph: t.graph, counter });\n      printTable(t.graph, `Solved in ${counter} iterations`, originTable);\n      return;\n    }\n\n    // 5. Find next unvisited vertex\n    const next = t.graph.indexOf(0, t.index);\n    // 6. Push next operation to the stack\n    assignAndPush(next, t, s);\n  }\n\n  // 13. Stack empty and no solution found\n  printTable(graph, \"Solution not found\");\n}\n\nconst getAvailableNumbers = (tNeighbor, t) => {\n  // 8. Get all neighbors for given vertex\n  const tNeighbors = neighborsArray[tNeighbor];\n  // 9. Find neighbor values\n  const tNeighborsValues = tNeighbors.map((n) => t.graph[n]);\n  // 10. Filter the out from candidates array\n  return nums.filter((n) => !tNeighborsValues.includes(n));\n};\n\nconst assignAndPush = (tNeighbor, t, s) => {\n  // 7. Get numeric candidates\n  const availableNumbers = getAvailableNumbers(tNeighbor, t);\n  // 11. For every candidate\n  for (let num of availableNumbers) {\n    const arrayCopy = Array.from(t.graph);\n    arrayCopy[tNeighbor] = num;\n    // 12. Push new operation with candidate and copy of a graph\n    s.push({ index: tNeighbor, value: num, graph: arrayCopy });\n  }\n};\n","// prettier-ignore\nconst notFunChallenge = [\n  0, 2, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 6, 0, 0, 0, 0, 3,\n  0, 7, 4, 0, 8, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 3, 0, 0, 2,\n  0, 8, 0, 0, 4, 0, 0, 1, 0,\n  6, 0, 0, 5, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 1, 0, 7, 8, 0,\n  5, 0, 0, 0, 0, 9, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 4, 0\n]\n\n// prettier-ignore\nconst arizonaEasiest = [\n  0, 0, 0, 2, 6, 0, 7, 0, 1,\n  6, 8, 0, 0, 7, 0, 0, 9, 0,\n  1, 9, 0, 0, 0, 4, 5, 0, 0,\n  8, 2, 0, 1, 0, 0, 0, 4, 0,\n  0, 0, 4, 6, 0, 2, 9, 0, 0,\n  0, 5, 0, 0, 0, 3, 0, 2, 8,\n  0, 0, 9, 3, 0, 0, 0, 7, 4,\n  0, 4, 0, 0, 5, 0, 0, 3, 6,\n  7, 0, 3, 0, 1, 8, 0, 0, 0\n]\n\n// prettier-ignore\nconst dailyTelegraph = [\n  0, 2, 0, 6, 0, 8, 0, 0, 0,\n  5, 8, 0, 0, 0, 9, 7, 0, 0,\n  0, 0, 0, 0, 4, 0, 0, 0, 0,\n  3, 7, 0, 0, 0, 0, 5, 0, 0,\n  6, 0, 0, 0, 0, 0, 0, 0, 4,\n  0, 0, 8, 0, 0, 0, 0, 1, 3,\n  0, 0, 0, 0, 2, 0, 0, 0, 0,\n  0, 0, 9, 8, 0, 0, 0, 3, 6,\n  0, 0, 0, 3, 0, 6, 0, 9, 0\n]\n\n// prettier-ignore\nconst vegardHanssen = [\n  0, 0, 0, 6, 0, 0, 4, 0, 0,\n  7, 0, 0, 0, 0, 3, 6, 0, 0,\n  0, 0, 0, 0, 9, 1, 0, 8, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 5, 0, 1, 8, 0, 0, 0, 3,\n  0, 0, 0, 3, 0, 6, 0, 4, 5,\n  0, 4, 0, 2, 0, 0, 0, 6, 0,\n  9, 0, 3, 0, 0, 0, 0, 0, 0,\n  0, 2, 0, 0, 0, 0, 1, 0, 0\n]\n\n// prettier-ignore\nconst randomEasy = [\n  0, 4, 0, 9, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 3, 0, 4, 8,\n  6, 0, 8, 0, 0, 0, 3, 7, 0,\n  9, 0, 4, 3, 0, 0, 0, 0, 1,\n  5, 8, 0, 1, 0, 6, 0, 0, 0,\n  0, 0, 0, 0, 0, 8, 7, 0, 0,\n  0, 0, 0, 0, 5, 9, 6, 0, 0,\n  8, 3, 0, 0, 4, 2, 9, 1, 7,\n  2, 6, 9, 0, 3, 1, 0, 8, 5\n]\n\n// prettier-ignore\nconst randomMedium = [\n  0, 0, 6, 0, 3, 2, 0, 5, 0,\n  0, 0, 0, 7, 0, 5, 3, 9, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 4,\n  0, 0, 0, 6, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 5, 0, 0, 3, 0,\n  0, 3, 1, 0, 0, 4, 6, 0, 2,\n  9, 0, 0, 0, 7, 8, 4, 1, 5,\n  0, 8, 5, 0, 0, 0, 0, 0, 3,\n  3, 7, 0, 0, 6, 0, 0, 0, 8\n]\n\n// prettier-ignore\nconst randomHard = [\n  0, 1, 0, 0, 0, 7, 0, 0, 5,\n  0, 0, 7, 0, 9, 0, 2, 0, 0,\n  2, 5, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 9, 0, 0, 0, 5, 8, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 7,\n  0, 3, 0, 0, 7, 4, 0, 0, 2,\n  0, 2, 0, 4, 0, 9, 0, 0, 0,\n  3, 0, 5, 0, 8, 0, 6, 0, 0,\n  0, 9, 1, 5, 2, 0, 0, 0, 4\n]\n\n// prettier-ignore\nconst randomExpert = [\n  8, 0, 0, 2, 0, 0, 0, 0, 4,\n  0, 0, 0, 0, 0, 7, 0, 3, 5,\n  3, 0, 4, 0, 0, 0, 0, 6, 0,\n  0, 0, 0, 0, 0, 0, 3, 1, 0,\n  0, 0, 2, 5, 0, 0, 0, 0, 6,\n  0, 0, 0, 0, 8, 6, 0, 0, 0,\n  7, 0, 0, 0, 0, 0, 0, 9, 0,\n  0, 0, 0, 0, 0, 3, 0, 0, 0,\n  0, 9, 6, 0, 0, 0, 5, 0, 0\n]\n\n// prettier-ignore\nconst randomEvil = [\n  0, 0, 0, 0, 0, 7, 0, 0, 4,\n  9, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 8, 2, 6, 0, 0, 1, 0, 0,\n  0, 0, 0, 0, 2, 0, 0, 1, 0,\n  0, 3, 6, 8, 0, 0, 2, 0, 0,\n  0, 0, 5, 0, 0, 0, 0, 0, 0,\n  5, 0, 0, 0, 0, 0, 3, 0, 0,\n  1, 0, 0, 9, 0, 0, 0, 0, 0,\n  0, 9, 3, 0, 0, 6, 0, 7, 0\n]\n\nexport const options = [\n  { name: \"Challenge - Easiest\", graph: arizonaEasiest },\n  { name: \"Challenge - Intermediate\", graph: dailyTelegraph },\n  { name: \"Challenge - Difficult\", graph: vegardHanssen },\n  { name: \"Challenge - Not fun\", graph: notFunChallenge },\n  { name: \"Random - Easy\", graph: randomEasy },\n  { name: \"Random - Medium\", graph: randomMedium },\n  { name: \"Random - Hard\", graph: randomHard },\n  { name: \"Random - Expert\", graph: randomExpert },\n  { name: \"Random - Evil\", graph: randomEvil },\n  { name: \"Clean\", graph: new Array(81).fill(0) },\n];\n","import \"regenerator-runtime/runtime\";\nimport { formTable, readOnlyTable } from \"./table\";\nimport { solveSudoku } from \"./sudoku\";\nimport { options } from \"./options\";\n\nwindow.onload = () => {\n  const renderFormTable = (graph) => {\n    const tableContainer = document.getElementById(\"puzzle-container\");\n    tableContainer.innerHTML = \"\";\n    tableContainer.appendChild(\n      formTable(graph, \"Choose existing or enter you own:\")\n    );\n\n    document.getElementById(\"sudoku-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const arr = Array.from(e.target.querySelectorAll(\"td > input\")).map(\n        (el) => (el.value ? parseInt(el.value) : 0)\n      );\n      const slowDown = e.target.querySelector(\"#slow-down\").checked;\n      const delay = e.target.querySelector(\"#span-input\").innerText;\n      solveSudoku(arr, slowDown, delay)\n        .then(() => console.log(\"success\"))\n        .catch((error) => console.warn(error));\n    });\n\n    Array.from(document.getElementsByClassName(\"sudoku-input\")).forEach(\n      (input) => {\n        input.addEventListener(\"input\", (e) => {\n          const id = e.target.id;\n          const prefix = id.slice(0, 6);\n          const index = parseInt(id.slice(6));\n          if (index < 80) {\n            const nextId = `${prefix}${index + 1}`;\n            document.getElementById(nextId).select();\n          }\n        });\n      }\n    );\n  };\n\n  const optionsSelect = document.getElementById(\"sudoku-select\");\n  options.forEach((option) => {\n    const optionElement = document.createElement(\"option\");\n    optionsSelect.setAttribute(\"value\", \"123\");\n    optionElement.innerText = option.name;\n    optionsSelect.appendChild(optionElement);\n  });\n\n  optionsSelect.addEventListener(\"change\", (e) => {\n    renderFormTable(options[e.target.options.selectedIndex].graph);\n  });\n\n  const solutionContainer = document.getElementById(\"solution-container\");\n  solutionContainer.innerHTML = \"\";\n  solutionContainer.appendChild(\n    readOnlyTable(new Array(81).fill(0), \"Pending...\")\n  );\n\n  renderFormTable(options[0].graph);\n};\n"]}